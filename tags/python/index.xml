<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Nabih Estefan Diaz</title>
    <link>https://estefan.co/tags/python/</link>
    <description>Recent content in Python on Nabih Estefan Diaz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 16 May 2021 12:00:00 -0500</lastBuildDate>
    
	<atom:link href="https://estefan.co/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Checkmatr: A Custom Chess Engine</title>
      <link>https://estefan.co/projects/creations/checkmatr/</link>
      <pubDate>Sun, 16 May 2021 12:00:00 -0500</pubDate>
      
      <guid>https://estefan.co/projects/creations/checkmatr/</guid>
      <description>Chess has simple rules, but the game space is extremely large. With the strength of our current computers, we aren&amp;rsquo;t even close to solving the game of chess by brute force. As a fallback, engines use a heuristic to try to find the best moves for a given player, which basically traverses a &amp;ldquo;game tree&amp;rdquo; (tree of possible moves for both players) and quantitatively evaluates the resulting position. This project primarily focuses on how to efficiently traverse such a game tree and create an effective heuristic to maximize the strength of a chess engine.</description>
    </item>
    
    <item>
      <title>Medieval Quest: An Adventure Game</title>
      <link>https://estefan.co/projects/creations/medievalquest/</link>
      <pubDate>Mon, 11 May 2020 12:00:00 -0500</pubDate>
      
      <guid>https://estefan.co/projects/creations/medievalquest/</guid>
      <description>For the final project for our Software Design class, Oscar De La Garza and I decided to create an Adventure Game in the style of the original The Legend Of Zelda. We created this game using Python&amp;rsquo;s PyGame library, developing different enemies, characters, screens, and mechanics that are used on different goals throughout the game. You can see in more detail the Sprites and mechanics we developed for Medieval Quest in our project webpage below.</description>
    </item>
    
    <item>
      <title>Dum-E: a 2x2x2 Rubik&#39;s Cube Solver</title>
      <link>https://estefan.co/projects/creations/dum-e/</link>
      <pubDate>Tue, 11 Feb 2020 12:00:00 -0500</pubDate>
      
      <guid>https://estefan.co/projects/creations/dum-e/</guid>
      <description>Olivia Jo Bradley, Maya Sivanandan, Florian Schwarzinger, and I participated in the MakeHarvard 2020 Make-a-thon. We decided to create, in our 24 hours, an automatic 2x2x2 Rubiks Cube solver. The difference between this and a normal Rubik&amp;rsquo;s cube solver is the fact that a 2x2x2 Rubik&amp;rsquo;s cube cant be held by the center pieces to turn the sides of the cube the way normal cubes are held, meaning it has to be free to twist and turn during it being solved.</description>
    </item>
    
  </channel>
</rss>